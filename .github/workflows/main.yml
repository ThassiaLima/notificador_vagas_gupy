name: Agendar busca de vagas Gupy

# Define os gatilhos para a execução do workflow
on:
  # Executa a cada 4 horas (00:00, 04:00, 08:00, etc.)
  schedule:
    - cron: "0 */4 * * *"
  # Permite a execução manual pela interface do GitHub
  workflow_dispatch:

jobs:
  executar:
    # Usa a versão mais recente do Ubuntu como ambiente de execução
    runs-on: ubuntu-latest

    steps:
      # 1. Baixa o código do seu repositório para a máquina virtual
      - name: Clonar repositório
        uses: actions/checkout@v4

      # 2. Configura o ambiente Python na versão especificada
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. Instala as bibliotecas Python listadas no requirements.txt
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Cria o arquivo de credenciais do Google e exporta as variáveis de ambiente
      - name: Configurar variáveis de ambiente e credenciais
        run: |
          echo '${{ secrets.GSHEET_CREDENTIALS_JSON }}' > credenciais.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=credenciais.json" >> $GITHUB_ENV
          echo "EMAIL_REMETENTE=${{ secrets.EMAIL_REMETENTE }}" >> $GITHUB_ENV
          echo "SENHA_APP=${{ secrets.SENHA_APP }}" >> $GITHUB_ENV
          echo "EMAIL_DESTINO=${{ secrets.EMAIL_DESTINO }}" >> $GITHUB_ENV

      # 5. Executa o script principal que busca as vagas
      - name: Executar script principal
        run: |
          python main.py

      # 6. Salva o histórico atualizado de volta no repositório
      - name: Fazer commit e push do histórico atualizado
        run: |
          # Configura a identidade do Git para o bot do GitHub Actions
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Adiciona o arquivo de histórico para ser commitado
          git add historico_vagas.csv
          
          # Verifica se há de fato mudanças no arquivo. Se não houver, não faz nada.
          # Se houver, faz o commit e o push.
          if git diff --staged --quiet; then
            echo "Nenhuma mudança no histórico para commitar."
          else
            git commit -m "[BOT] Atualiza histórico de vagas"
            git push
            echo "Histórico atualizado e enviado para o repositório."
          fi
          